#!/bin/bash
set -x

# If we have a .taskenv file load it as source
if [ -f .taskenv ]; then
    source .taskenv
fi

PATH=./src/node_modules/.bin:$PATH
PATH=./node_modules/.bin:$PATH
PATH=./src/bin:$PATH
PATH=./bin:$PATH

#################################################
# Handle upgrading multiple packages specified in 
# package.json. Add the package names you want
# manged in the `package.json#_monorepo array`
# You need to have `jq` installed
###############################################

function monorepo:update {
    cd ./src 
    
    for pkg in $(cat package.json | jq -r ._monorepo[]); do 
        echo "check pakage: $pkg"
        ncu --upgrade $pkg
    done
}

##########################################
# Publish NPM/Github Tags
##########################################

function _publish:check {
    if output=$(git status --untracked-files=no --porcelain) && [ -z "$output" ]; then
        # Working directory clean
        echo "Ready to publish..."    
    else
        red=`tput setaf 1`
        reset=`tput sgr0`
        echo "  ${red}Git working directory not clean."
        echo "  Commit your changes and try again.${reset}"
        exit 1
    fi
}

function publish:major {
    _publish:check
    npm version major && npm publish && npm version patch && git push --tags && git push origin master
}

function publish:minor {
    _publish:check
    npm version minor && npm publish && npm version patch && git push --tags && git push origin master
}

function publish:patch {
    _publish:check
    npm version patch && npm publish && git push --tags && git push origin master
}

function help {
    echo "$0 <task> <args>"
    echo "Tasks:"
    compgen -A function | grep -v '^_' | cat -n
}

TIMEFORMAT="Task completed in %3lR"
time ${@:-help}  